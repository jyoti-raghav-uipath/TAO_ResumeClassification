<Activity mc:Ignorable="sap sap2010" x:Class="ML_Skill" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:d="clr-namespace:DU_PII_Redaction;assembly=DataService.DU_PII_Redaction" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.MLServices;assembly=UiPath.MLServices" xmlns:uma="clr-namespace:UiPath.MLServices.Activities;assembly=UiPath.MLServices.Activities" xmlns:utam="clr-namespace:UiPath.Testing.Activities.Mocks;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_boolClassified" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_PDFFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_index" Type="InArgument(x:Int32)" />
    <x:Property Name="in_text" Type="InArgument(x:String)" />
    <x:Property Name="out_Output" Type="OutArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>844,3817.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.MLServices</x:String>
      <x:String>UiPath.MLServices.Enums</x:String>
      <x:String>UiPath.MLServices.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>DU_PII_Redaction</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Testing.Activities.Mocks</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="112">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>PdfSharp</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPathTeam.Positioner.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.StatusProgress.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.MLServices</AssemblyReference>
      <AssemblyReference>UiPath.MLServices.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>DataService.DU_PII_Redaction</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="641.333333333333,3752.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="JsonResponse" />
      <Variable x:TypeArguments="x:String" Name="Email" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_SkillResult" />
      <Variable x:TypeArguments="x:String" Name="Name" />
      <Variable x:TypeArguments="d:TAO" Default="[new TAO]" Name="TAORecord" />
      <Variable x:TypeArguments="d:TAO" Default="[new TAO]" Name="TAORecordOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="599.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Starting ML skill&quot;]" />
    <Assign DisplayName="Assign Email" sap:VirtualizedContainerService.HintSize="599.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Email]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Name" sap:VirtualizedContainerService.HintSize="599.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
      </Assign.Value>
    </Assign>
    <uma:MLSkills ApiKey="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Name="{x:Null}" NumberOfRetries="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" SkillURL="{x:Null}" StatusCode="{x:Null}" TimeOutMs="{x:Null}" Connection="Robot" DisplayName="MLSkill" ExternApiFileType="JSON" sap:VirtualizedContainerService.HintSize="599.333333333333,413.333333333333" sap2010:WorkflowViewState.IdRef="MLSkills_1" Item="[in_text]" JsonResponse="[JsonResponse]" NextPageNum="2" RefreshList="False" TotalCount="9">
      <uma:MLSkills.MLSkillList>
        <scg:List x:TypeArguments="um:MLSkill" Capacity="16">
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/faqsemantic" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="b6c58f22-b0a6-4d8a-8ea0-8a1b664864e8" InputDescription="JSON with one string, called &quot;reference&quot; and one list of strings, called, &quot;candidates&quot;. This means that multiple reference &quot;sentences&quot; are not accepted. &quot;Candidates&quot; is a list of candidate sentences.&#xA;&#xA;{&quot;reference&quot; : string, &quot;candidates&quot; : [strings]}" InputType="JSON" Name="FaqSemantic" OutputDescription="JSON with reference and most similar candidates, and the associated score on that similarity (between 0-1) ordered in descending order of score" ProjectId="08ce9e1e-e15f-40ab-aca4-867454377bb0" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <x:Reference>__ReferenceID0</x:Reference>
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/icm-complaint-skill" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="6c8d0b79-f9a2-4574-a134-a13afcd1797a" InputDescription="Text to be classified as String: 'I loved this movie.'" InputType="JSON" Name="ICM_Complaint_Skill" OutputDescription="JSON with pedicted class name, associated confidence on that class prediction (between 0-1).  For example: {\&quot;prediction\&quot;: \&quot;Positive\&quot;, \&quot;confidence\&quot;: 0.9422031841278076,}" ProjectId="9ff90956-170f-4c1a-9158-36c7f3527138" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/icm-ner" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="6e238409-b498-4421-af89-03c1ef57b235" InputDescription="Text in one of the 100 languages here (https://docs.uipath.com/ai-fabric/v0/docs/aic-cloud-custom-named-entity-recognition#languages) from which entities will be extracted." InputType="JSON" Name="ICM_NER" OutputDescription="A Json Response with list of named entities in the text. Each element in the list has the following items in the prediction: 1. Text that was recognized; 2. Starting and ending positions of the text, character-wise; 3. Type of the named entity; 4.Confidence." ProjectId="9ff90956-170f-4c1a-9158-36c7f3527138" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/objectdetectionml" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="62bb9d79-3fd1-4077-be5f-c4df1d9dccce" InputDescription="Path to the image to be analyzed." InputType="FILE" Name="ObjectDetectionML" OutputDescription="JSON with identified object’s class byte array representation (allows you to see box around objects), identified object’s class - name, score (between 0-1)&#xA;Example:&#xA;{&#xA;  &quot;Predicted ByteArray&quot;:&#xA;    &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgI…TD&quot;,&#xA;  &quot;Predicted Class&quot;:&#xA;     &quot;[{'class': 'book', 'score': ' 0.31'}, {'class': 'dog', 'score': ' 0.53'}, {'class': 'chair', 'score': ' 0.79'}]&quot;&#xA;}" ProjectId="6e873150-da09-4c81-971d-5adf70484d8c" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/sa" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="1d55bebd-edd1-4be2-b886-fdf1d0437c19" InputDescription="Text to be analyzed. For example: &quot;I am dissatisfied with this service.&quot;" InputType="JSON" Name="SA" OutputDescription="JSON with class name and confidence on that class prediction (between 0-1).&#xA;Class prediction can be one of: &quot;Very Negative&quot;, &quot;Negative&quot;, &quot;Neutral&quot;, &quot;Positive&quot;, &quot;Very Positive&quot;&#xA;For example:  '{&quot;sentiment&quot;: &quot;Very Negative&quot;, &quot;confidence&quot;: 0.97}'" ProjectId="795031ef-7199-480f-9885-f240714b6107" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/sentimentanalysis" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="6f257a60-6946-4376-8677-3b14af04a807" InputDescription="Text to be analyzed. For example: &quot;I am dissatisfied with this service.&quot;" InputType="JSON" Name="SentimentAnalysis" OutputDescription="JSON with class name and confidence on that class prediction (between 0-1).&#xA;Class prediction can be one of: &quot;Very Negative&quot;, &quot;Negative&quot;, &quot;Neutral&quot;, &quot;Positive&quot;, &quot;Very Positive&quot;&#xA;For example:  '{&quot;sentiment&quot;: &quot;Very Negative&quot;, &quot;confidence&quot;: 0.97}'" ProjectId="d7762bb8-a39b-4a21-b1a3-666f49d0f570" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/sentimentanalysisii" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="606ca269-73c9-4cab-a6dd-12162bc3a5c2" InputDescription="Text to be analyzed. For example: &quot;I am dissatisfied with this service.&quot;" InputType="JSON" Name="sentimentAnalysisII" OutputDescription="JSON with class name and confidence on that class prediction (between 0-1).&#xA;Class prediction can be one of: &quot;Very Negative&quot;, &quot;Negative&quot;, &quot;Neutral&quot;, &quot;Positive&quot;, &quot;Very Positive&quot;&#xA;For example:  '{&quot;sentiment&quot;: &quot;Very Negative&quot;, &quot;confidence&quot;: 0.97}'" ProjectId="8617afca-44bd-4fbb-ac5c-aa82d7cc12be" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
          <um:MLSkill AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/travel-agency-sentiment-analysis" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="1fa1d9ef-86a4-4ae9-93ca-44b3d5f2df66" InputDescription="Text to be analyzed. For example: &quot;I am dissatisfied with this service.&quot;" InputType="JSON" Name="Travel_Agency_Sentiment_Analysis" OutputDescription="JSON with class name and confidence on that class prediction (between 0-1).&#xA;Class prediction can be one of: &quot;Very Negative&quot;, &quot;Negative&quot;, &quot;Neutral&quot;, &quot;Positive&quot;, &quot;Very Positive&quot;&#xA;For example:  '{&quot;sentiment&quot;: &quot;Very Negative&quot;, &quot;confidence&quot;: 0.97}'" ProjectId="b99bd611-7e70-4fb1-9219-8dc97ae23ef7" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
        </scg:List>
      </uma:MLSkills.MLSkillList>
      <uma:MLSkills.SelectedMLSkill>
        <um:MLSkill x:Name="__ReferenceID0" AccessUri="https://ai-stg-uipath.deskover.com/mlskills/8631c939-66cd-42c2-b886-39aa98dcb920/b8752381-0d68-4c0a-9cab-d848294216e6/hr-test" AccountId="8631c939-66cd-42c2-b886-39aa98dcb920" Description="" Id="5cdba2c2-3a99-4d8c-8a22-645ec3833b9a" InputDescription="Text in English from which entities will be extracted." InputType="JSON" Name="HR_Test" OutputDescription="List of named entities in the text. Each elemnt in the list has the text that was recognized, the starting and ending positions (character-wise) of the text, the type of named entity and the confidence in that prediction. For example: [ {&quot;text&quot;: &quot;George Washington&quot;,&quot;start_pos&quot;: 0,&quot;end_pos&quot;: 17,&quot;type&quot;: &quot;PER&quot;,&quot;confidence&quot;: 0.96469810605049133 }, {&quot;text&quot;: &quot;New York City&quot;,&quot;start_pos&quot;: 26,&quot;end_pos&quot;: 39,&quot;type&quot;: &quot;LOC&quot;,&quot;confidence&quot;: 0.944470226764679 }, {&quot;text&quot;: &quot;Congress&quot;,&quot;start_pos&quot;: 51,&quot;end_pos&quot;: 59,&quot;type&quot;: &quot;ORG&quot;,&quot;confidence&quot;: 0.99666249752044678 }]" ProjectId="31c248c2-66b8-44bd-b791-25ed1a4d1f3b" TenantId="b8752381-0d68-4c0a-9cab-d848294216e6" />
      </uma:MLSkills.SelectedMLSkill>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uma:MLSkills>
    <Assign DisplayName="Assign datatable" sap:VirtualizedContainerService.HintSize="599.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[dt_SkillResult]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[JsonConvert.DeserializeObject(of datatable)(JsonResponse)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_SkillResult]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="599.333333333333,534.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <If Condition="[CurrentRow(3).ToString.ToLower.Contains(&quot;per&quot;)]" DisplayName="If Person" sap:VirtualizedContainerService.HintSize="484,410.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Sequence Person" sap:VirtualizedContainerService.HintSize="304,216" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign Name 2" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[CurrentRow(0).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Break DisplayName="Break 1" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
              </Sequence>
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each To find Email" sap:VirtualizedContainerService.HintSize="599.333333333333,1053.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[in_text.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item1" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body Email 1" sap:VirtualizedContainerService.HintSize="562.666666666667,925.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each To find Email 2" sap:VirtualizedContainerService.HintSize="520.666666666667,538.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[item1.ToString.Split(&quot; &quot;C)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                  </ActivityAction.Argument>
                  <If Condition="[item.ToString.Contains(&quot;@&quot;) and item.ToString.ToLower.Contains(&quot;.com&quot;)]" DisplayName="If Email check" sap:VirtualizedContainerService.HintSize="484,410.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence 2" sap:VirtualizedContainerService.HintSize="304,216" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Email 2" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Email]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break DisplayName="Break 2" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                      </Sequence>
                    </If.Then>
                  </If>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[not String.IsNullOrEmpty(email)]" DisplayName="If Email empty" sap:VirtualizedContainerService.HintSize="520.666666666667,254.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_6" />
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <utam:MockActivity DisplayName="Mock Multiple Assign" MockedActivityIdRef="MultipleAssign_1">
      <utam:MockActivity.MockedActivity>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="599.333333333333,222" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TAORecord.CandidateName]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[Name]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TAORecord.JobID]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">J0034</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TAORecord.QualificationStatus]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[if(in_boolClassified,"Qualified","Further review required")]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TAORecord.CandidateEmail]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[Email]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TAORecord.InterviewStatus]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[if(in_boolClassified,"Pending","NA")]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </utam:MockActivity.MockedActivity>
      <Sequence sap2010:WorkflowViewState.IdRef="" />
    </utam:MockActivity>
    <utam:MockActivity DisplayName="Mock Create Entity Record" MockedActivityIdRef="CreateEntityRecord`1_2">
      <utam:MockActivity.MockedActivity>
        <uda:CreateEntityRecord x:TypeArguments="d:TAO" ContinueOnError="False" DisplayName="Create Entity Record" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="599.333333333333,224" sap2010:WorkflowViewState.IdRef="CreateEntityRecord`1_2" InputEntity="[TAORecord]" OutputEntity="[TAORecordOutput]" TimeoutInMs="30000" />
      </utam:MockActivity.MockedActivity>
      <Sequence sap2010:WorkflowViewState.IdRef="" />
    </utam:MockActivity>
    <utam:MockActivity DisplayName="Mock Upload File to Record Field" MockedActivityIdRef="UploadFileToRecordField`1_2">
      <utam:MockActivity.MockedActivity>
        <uda:UploadFileToRecordField x:TypeArguments="d:TAO" ContinueOnError="False" DisplayName="Upload File to Record Field" ExpansionDepth="2" Field="Resume" FilePath="[in_PDFFilePath]" sap:VirtualizedContainerService.HintSize="599.333333333333,342.666666666667" sap2010:WorkflowViewState.IdRef="UploadFileToRecordField`1_2" OutputEntity="[TAORecordOutput]" RecordId="[TAORecordOutput.Id]" TimeoutInMs="30000">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uda:UploadFileToRecordField>
      </utam:MockActivity.MockedActivity>
      <Sequence sap2010:WorkflowViewState.IdRef="" />
    </utam:MockActivity>
    <utam:MockActivity DisplayName="Mock Upload Storage File" MockedActivityIdRef="UploadStorageFile_1">
      <utam:MockActivity.MockedActivity>
        <ucas:UploadStorageFile TimeoutMS="{x:Null}" Destination="[Name+&quot;.pdf&quot;]" DisplayName="Upload Storage File" sap:VirtualizedContainerService.HintSize="599.333333333333,190" sap2010:WorkflowViewState.IdRef="UploadStorageFile_1" Path="[in_PDFFilePath]" StorageBucketName="Resumes" />
      </utam:MockActivity.MockedActivity>
      <Sequence sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_Output]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Completed</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </utam:MockActivity>
  </Sequence>
</Activity>